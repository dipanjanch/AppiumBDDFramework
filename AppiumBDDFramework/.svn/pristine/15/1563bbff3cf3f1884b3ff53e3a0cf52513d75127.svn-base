package runner;

import cucumber.api.CucumberOptions;
import cucumber.api.junit.Cucumber;
import cucumber.api.testng.AbstractTestNGCucumberTests;
import cucumber.api.testng.CucumberFeatureWrapper;
import cucumber.api.testng.TestNGCucumberRunner;
import steps.CreateSessionCucumber;	
import com.relevantcodes.extentreports.ExtentReports;

import org.junit.runner.RunWith;
import org.testng.annotations.*;

import com.cucumber.listener.ExtentCucumberFormatter;
import com.cucumber.listener.Reporter;

import java.io.File;
import java.lang.reflect.Method;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;


@RunWith(Cucumber.class)
@CucumberOptions(
		tags = {"@test"},
        monochrome = true,
        features = "src/test/java/features",
        glue = {"steps"},
        plugin = {"pretty", "html:target/cucumber-html-report","com.cucumber.listener.ExtentCucumberFormatter:output/cucumber-reports/report.html"}

)
public class CucumberRunnerUtil{

    private TestNGCucumberRunner testNGCucumberRunner;
    public static String timeStamp=new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());

    @BeforeSuite(alwaysRun = true)
    public void setCreateSession() throws Exception {
    	
     // write if anything needs to be set up once before tests run.
    }
    
    @AfterSuite(alwaysRun = true)
    public void setDestroySession() throws Exception {
     // write if anything needs to be destroy up once after tests ran.
    }


    @BeforeClass(alwaysRun = true)
    public void setUpClass() throws Exception {
    	testNGCucumberRunner = new TestNGCucumberRunner(this.getClass());
	    ExtentCucumberFormatter.initiateExtentCucumberFormatter();
		ExtentCucumberFormatter.loadConfig(new File("src/test/resources/extent-config.xml"));
        
    }




    @Test(groups = "cucumber", description = "Runs Cucumber Feature",dataProvider = "features" )
    public void feature(CucumberFeatureWrapper cucumberFeature) {
        testNGCucumberRunner.runCucumber(cucumberFeature.getCucumberFeature());
    }


    @DataProvider
    public Object[][] features() {
        return testNGCucumberRunner.provideFeatures();
    }



    @AfterClass(alwaysRun = true)
    public void tearDownClass() throws Exception {
        testNGCucumberRunner.finish();
        
        
/*      If com.cucumber.listner package is removed and ExtentCucumberFormatter references are removed for  generating reports
 		CreatesessionCucumber file @after has screenshot method */
 /*
 		Reporter.loadXMLConfig(new File("src/test/resource/extent-config.xml"));       
        Reporter.setSystemInfo("User Name",System.getProperty("user.name"));
        Reporter.setSystemInfo("Time Zone", System.getProperty("user.timezone"));
*/        
    }


    @AfterSuite
    public void cleanUp(){
        // close if something enabled in @before suite. e.g. closing connection to DB
    }


}
